<div class="navbar" transition:persist="navbar">
  <div class="navbar__site-title">Reducet</div>
  <nav class="navbar__entries">
    <a class="navbar__entry" href="/">Home</a>
    <a class="navbar__entry" href="/tags">Tags</a>
    <a class="navbar__entry" href="/about">About</a>
  </nav>
  <button
    id="theme-switch-button"
    class="material-symbols-rounded"
    type="button"
    aria-label="Switch theme"></button>
  <script>
    const themeSwitcher = document.getElementById("theme-switch-button");
    if (themeSwitcher == undefined)
      throw new Error("No #theme-switch-button found");

    themeSwitcher.addEventListener("click", () => {
      const isDark = document.documentElement.classList.toggle("dark");
      localStorage.setItem("dark-mode", String(isDark));
    });
  </script>
</div>
<style>
  .navbar {
    align-items: baseline;
    background-color: var(--color-bg-close);
    display: flex;
    margin-bottom: 16px;
    padding: 16px;
    position: sticky;
    top: 0;
    z-index: 1;

    transition: 250ms ease;
    transition-property: background-color, color;

    /* We need a name to make sure the navbar will be painted over other named
       elements, see https://github.com/w3c/csswg-drafts/issues/8941 */
    view-transition-name: navbar;

    .navbar__entries {
      display: flex;
      flex-grow: 1;
      gap: 1em;

      .navbar__entry {
        /* Reset <a> styles */
        color: inherit;
        text-decoration: none;
      }
    }

    .navbar__site-title {
      font-size: 1.2em;
      font-weight: bold;
      margin-right: 1em;
    }

    #theme-switch-button {
      font-size: 1.5em;

      &::after {
        content: "dark_mode";
      }

      &:is(:root.dark &)::after {
        content: "light_mode";
      }
    }
  }
</style>
